<?xml version="1.0"?>
<doc>
    <assembly>
        <name>KangWeiCommon</name>
    </assembly>
    <members>
        <member name="T:KangWeiCommon.DesignPattern.Singleton`1">
            <summary>
            单例模式实现
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:KangWeiCommon.DesignPattern.Singleton`1._instance">
            <summary>
            当前类的唯一实例
            </summary>
        </member>
        <member name="F:KangWeiCommon.DesignPattern.Singleton`1.syslock">
            <summary>
            全局锁 
            </summary>
        </member>
        <member name="M:KangWeiCommon.DesignPattern.Singleton`1.#ctor">
            <summary>
            无参构造函数
            </summary>
        </member>
        <member name="P:KangWeiCommon.DesignPattern.Singleton`1.Instance">
            <summary>
            当前类的唯一实例
            </summary>
        </member>
        <member name="T:KangWeiCommon.Entity.PageModel`1">
            <summary>
            通用分页实体
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:KangWeiCommon.Entity.PageModel`1.PageData">
            <summary>
            分页数据
            </summary>
        </member>
        <member name="P:KangWeiCommon.Entity.PageModel`1.PageIndex">
            <summary>
            页码（统一从1开始）
            </summary>
        </member>
        <member name="P:KangWeiCommon.Entity.PageModel`1.PageSize">
            <summary>
            页容量（每页多少条数据）
            </summary>
        </member>
        <member name="P:KangWeiCommon.Entity.PageModel`1.PageCount">
            <summary>
            总页数
            </summary>
        </member>
        <member name="P:KangWeiCommon.Entity.PageModel`1.RowCount">
            <summary>
            总记录数
            </summary>
        </member>
        <member name="T:KangWeiCommon.Entity.ResultModel`1">
            <summary>
            返回结果实体类（泛型）
            </summary>
        </member>
        <member name="M:KangWeiCommon.Entity.ResultModel`1.#ctor">
            <summary>
            无参构造函数
            </summary>
        </member>
        <member name="M:KangWeiCommon.Entity.ResultModel`1.#ctor(System.Int32,`0,System.String)">
            <summary>
            有参构造函数
            </summary>
            <param name="code"></param>
            <param name="data"></param>
            <param name="msg"></param>
        </member>
        <member name="P:KangWeiCommon.Entity.ResultModel`1.Code">
            <summary>
            返回状态码
            </summary>
        </member>
        <member name="P:KangWeiCommon.Entity.ResultModel`1.Msg">
            <summary>
            返回详细信息
            </summary>
        </member>
        <member name="P:KangWeiCommon.Entity.ResultModel`1.Data">
            <summary>
            返回数据
            </summary>
        </member>
        <member name="T:KangWeiCommon.Entity.TimeOfDay">
            <summary>
            表示任意一天中的时间点（小时、分、秒）
            </summary>
        </member>
        <member name="M:KangWeiCommon.Entity.TimeOfDay.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            根据给定的小时、分、秒创建TimeOfDay实例对象
            </summary>
            <param name="hour">小时, 在 0 到 23之间</param>
            <param name="minute">分, 在 0 and 59之间</param>
            <param name="second">秒, 在 0 and 59之间</param>
        </member>
        <member name="M:KangWeiCommon.Entity.TimeOfDay.#ctor(System.Int32,System.Int32)">
            <summary>
            根据给定的小时、分（秒：默认0）创建TimeOfDay实例对象
            </summary>
            <param name="hour">小时, 在 0 到 23之间</param>
            <param name="minute">分, 在 0 and 59之间</param>
        </member>
        <member name="M:KangWeiCommon.Entity.TimeOfDay.Validate">
            <summary>
            校验Hour、Minute、Second是否合法
            </summary>
        </member>
        <member name="M:KangWeiCommon.Entity.TimeOfDay.HourMinuteAndSecondOfDay(System.Int32,System.Int32,System.Int32)">
            <summary>
            根据给定的小时、分、秒创建TimeOfDay实例对象
            </summary>
            <param name="hour">小时, 在 0 到 23之间</param>
            <param name="minute">分, 在 0 and 59之间</param>
            <param name="second">秒, 在 0 and 59之间</param>
            <returns></returns>
        </member>
        <member name="M:KangWeiCommon.Entity.TimeOfDay.HourAndMinuteOfDay(System.Int32,System.Int32)">
            <summary>
            根据给定的小时、分（秒：默认0）创建TimeOfDay实例对象
            </summary>
            <param name="hour">小时, 在 0 到 23之间</param>
            <param name="minute">分, 在 0 and 59之间</param>
            <returns></returns>
        </member>
        <member name="P:KangWeiCommon.Entity.TimeOfDay.Hour">
            <summary>
            返回Day中的Hour (在 0 and 23之间)
            </summary>
        </member>
        <member name="P:KangWeiCommon.Entity.TimeOfDay.Minute">
            <summary>
            返回Day中的分 (在 0 and 59之间)
            </summary>
        </member>
        <member name="P:KangWeiCommon.Entity.TimeOfDay.Second">
             <summary>
            返回Day中的秒 (在 0 and 59之间)
             </summary>
        </member>
        <member name="M:KangWeiCommon.Entity.TimeOfDay.Before(KangWeiCommon.Entity.TimeOfDay)">
            <summary>
            判断当前实例时间是否在给定的时间timeOfDay之前。在返回True，不在返回False
            </summary>
            <param name="timeOfDay">要比较的时间</param>
            <returns></returns>
        </member>
        <member name="M:KangWeiCommon.Entity.TimeOfDay.Equals(System.Object)">
            <summary>
            判断两个时间是否相等
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:KangWeiCommon.Entity.TimeOfDay.GetHashCode">
            <summary>
            获取哈希值
            </summary>
            <returns></returns>
        </member>
        <member name="M:KangWeiCommon.Entity.TimeOfDay.GetTimeOfDayForDate(System.Nullable{System.DateTimeOffset})">
            <summary>
            截取给定时间的年月日和当前实例的Hour、Minute、Second拼接成一个时间对象返回
            </summary>
            <param name="dateTime">给定的时间</param>
        </member>
        <member name="M:KangWeiCommon.Entity.TimeOfDay.ToString">
            <summary>
            返回当前时间的描述格式
            </summary>
            <returns></returns>
        </member>
        <member name="T:KangWeiCommon.Extensions">
            <summary>
            系统类的扩展
            </summary>
            <summary>
            系统类的扩展
            </summary>
            <summary>
            系统类的扩展
            </summary>
            <summary>
            系统类的扩展
            </summary>
            <summary>
            系统类的扩展
            </summary>
            <summary>
            系统类的扩展
            </summary>
            <summary>
            系统类的扩展
            </summary>
            <summary>
            系统类的扩展
            </summary>
            <summary>
            系统类的扩展
            </summary>
        </member>
        <member name="M:KangWeiCommon.Extensions.IfTrue(System.Boolean,System.Action)">
            <summary>
            如果一个bool类型的值为ture，执行一个委托
            </summary>
            <param name="this"></param>
            <param name="action">被执行的委托</param>
        </member>
        <member name="M:KangWeiCommon.Extensions.IfFalse(System.Boolean,System.Action)">
            <summary>
            如果一个bool类型的值为false，执行一个委托
            </summary>
            <param name="this"></param>
            <param name="action"></param>
        </member>
        <member name="M:KangWeiCommon.Extensions.HasLength(System.Collections.IEnumerable)">
            <summary>
            判断一个集合中是否有元素。有返回true
            </summary>
            <param name="collection"></param>
            <returns></returns>
        </member>
        <member name="M:KangWeiCommon.Extensions.HasNotLength``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            判断一个集合中是否 没有元素。没有返回true
            </summary>
            <param name="collection"></param>
            <returns></returns>
        </member>
        <member name="M:KangWeiCommon.Extensions.GetDescription(System.Enum,System.Boolean)">
            <summary>
            获得枚举的Description属性描述
            </summary>
            <param name="value">枚举值</param>
            <param name="nameInstend">当枚举没有定义DescriptionAttribute,是否用枚举名代替，默认使用</param>
            <returns>枚举的Description</returns>
        </member>
        <member name="M:KangWeiCommon.Extensions.IsBetween``1(``0,``0,``0)">
            <summary>
            判断一个值是否在一个范围之内.如果minValue&lt; 输入值 &gt;maxValue,返回true
            </summary>
            <param name="this">被比较的值</param>
            <param name="minValue">比较范围最大值</param>
            <param name="maxValue">比较范围最小值</param>
            <returns>如果minValue&lt;输入值&gt;maxValue,返回true</returns>
        </member>
        <member name="M:KangWeiCommon.Extensions.IsInRange``1(``0,``0,``0)">
            <summary>
            判断一个值是否在一个范围之内.如果minValue&lt;= 输入值 &gt;=maxValue,返回true
            </summary>
            <param name="this">被比较的值</param>
            <param name="minValue">比较范围最大值</param>
            <param name="maxValue">比较范围最小值</param>
            <returns>如果minValue&lt;= 输入值 &gt;=maxValue,返回true</returns>
        </member>
        <member name="M:KangWeiCommon.Extensions.IsEmpty(System.Guid)">
            <summary>
            判断是否为Guid.Empty
            </summary>
            <param name="guid"></param>
            <returns></returns>
        </member>
        <member name="M:KangWeiCommon.Extensions.ToInt(System.Nullable{System.Int32})">
            <summary>
            将Int?转化为Int。如果int?为null，返回0；
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:KangWeiCommon.Extensions.IsLeapYear(System.Int32)">
            <summary>
            判断一个年份是否为闰年
            </summary>
            <param name="year">4位数年份</param>
            <returns></returns>
        </member>
        <member name="M:KangWeiCommon.Extensions.DaysInMonth(System.Int32,System.Int32)">
            <summary>
            返回指定年和月中的天数。
            </summary>
            <param name="year">年份</param>
            <param name="month">月份（1-12）</param>
            <returns></returns>
        </member>
        <member name="M:KangWeiCommon.Extensions.IsNull(System.Object)">
            <summary>
            判断一个object类型是否为空，为空返回true。
            </summary>
            <param name="this"></param>
            <returns>对象为空返回true，否则返回false</returns>
        </member>
        <member name="M:KangWeiCommon.Extensions.IsNull(System.Object,System.Action)">
            <summary>
            判断一个object类型是否为空，为空返回true并执行指定委托
            </summary>
            <param name="this"></param>
            <param name="action">对象为空是，要执行的委托</param>
            <returns>对象为空返回true，否则返回false</returns>
        </member>
        <member name="M:KangWeiCommon.Extensions.IsNotNull(System.Object)">
            <summary>
            判断一个object类型是否不为空，如果不为空，返回true
            </summary>
            <param name="this"></param>
            <returns>对象不为空返回true，否则返回false</returns>
        </member>
        <member name="M:KangWeiCommon.Extensions.IsNotNull(System.Object,System.Action)">
            <summary>
            判断一个object类型是否不为空，如果不为空，返回true
            </summary>
            <param name="this"></param>
            <param name="action">对象不为空时，要执行的委托</param>
            <returns>对象不为空返回true，否则返回false</returns>
        </member>
        <member name="M:KangWeiCommon.Extensions.ToInt(System.Object)">
            <summary>
            将object类型转换为int类型
            </summary>
            <param name="this"></param>
            <returns></returns>
        </member>
        <member name="M:KangWeiCommon.Extensions.ToDecimal(System.Object)">
            <summary>
            将object类型转换为decimal类型
            </summary>
            <param name="this"></param>
            <returns></returns>
        </member>
        <member name="M:KangWeiCommon.Extensions.ToDouble(System.Object)">
            <summary>
            将object类型转换为Double类型
            </summary>
            <param name="this"></param>
            <returns></returns>
        </member>
        <member name="M:KangWeiCommon.Extensions.ToFloat(System.Object)">
            <summary>
            将object类型转换为单精度Single（float）类型
            </summary>
            <param name="this"></param>
            <returns></returns>
        </member>
        <member name="M:KangWeiCommon.Extensions.SerializeToXml(System.Object)">
            <summary>
            将对象序列化为xml字符串
            </summary>
            <param name="this">要序列化的对象</param>
            <remarks>被序列化的对象需要实现 <see cref="T:System.SerializableAttribute"/>特性 </remarks>
            <returns>xml格式字符串</returns>
        </member>
        <member name="M:KangWeiCommon.Extensions.SerializeToJson``1(``0,System.Text.Encoding)">
            <summary>
            对象序列化为json字符串
            </summary>
            <typeparam name="T"></typeparam>
            <param name="this"></param>
            <param name="encoding"></param>
            <returns>Json字符串</returns>
        </member>
        <member name="M:KangWeiCommon.Extensions.To``1(System.Object)">
            <summary>
            类型转换
            </summary>
            <typeparam name="T">从指定类型转换到T类型</typeparam>
            <param name="this"></param>
            <returns></returns>
        </member>
        <member name="M:KangWeiCommon.Extensions.To(System.Object,System.Type)">
            <summary>
            类型转换
            </summary>
            <param name="this"></param>
            <param name="targetType">转换到targetType类型</param>
            <returns></returns>
        </member>
        <member name="M:KangWeiCommon.Extensions.ReadToEnd(System.IO.Stream,System.Text.Encoding,System.Int64)">
            <summary>
             读取Stream流返回字符串
            </summary>
            <param name="this"></param>
            <param name="encoding"></param>
            <param name="position">流的起始位置</param>
            <returns></returns>
        </member>
        <member name="M:KangWeiCommon.Extensions.IsNullOrEmpty(System.String)">
            <summary>
            判断字符串是否为空。 null、string.empty、""、" "都返回true
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:KangWeiCommon.Extensions.IsNullOrEmpty(System.String,System.Action)">
            <summary>
            判断字符串是否为空。为空时返回ture并执行指定的委托
            </summary>
            <param name="str"></param>
            <param name="action">字符串为空时，执行的委托</param>
            <returns></returns>
        </member>
        <member name="M:KangWeiCommon.Extensions.IsNotNullOrEmpty(System.String)">
            <summary>
            判断字符串是否不为空。null、string.empty、""、" ",任何一种情况都会视为空
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:KangWeiCommon.Extensions.IsNotNullOrEmpty(System.String,System.Action)">
            <summary>
            断字符串是否不为空。不为空时返回true并执行指定委托
            </summary>
            <param name="str"></param>
            <param name="action">对象不为空时，指定的委托</param>
            <returns></returns>
        </member>
        <member name="M:KangWeiCommon.Extensions.IsDecimal(System.String)">
            <summary>
            判断字符串是否能转换为Decimal类型。
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:KangWeiCommon.Extensions.IsDecimal(System.String,System.Decimal@)">
            <summary>
            判断字符串是否能转换为Decimal类型。
            </summary>
            <param name="str"></param>
            <param name="returnValue"></param>
            <returns></returns>
        </member>
        <member name="M:KangWeiCommon.Extensions.ToDecimal(System.String,System.Decimal)">
            <summary>
            字符串转换为Decimal类型，如果转换失败，返回0
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:KangWeiCommon.Extensions.ToDecimal(System.String,System.Int32)">
            <summary>
            字符串转换为Decimal类型并四舍五入保留指定位数的小数
            </summary>
            <param name="str">被转换的字符串</param>
            <param name="decimals">保留的小数位数，默认值为2</param>
            <returns></returns>
        </member>
        <member name="M:KangWeiCommon.Extensions.IsFloat(System.String)">
            <summary>
            判断字符串是否能转换为Float类型。
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:KangWeiCommon.Extensions.IsFloat(System.String,System.Single@)">
            <summary>
            判断字符串是否能转换为Float类型。
            </summary>
            <param name="str"></param>
            <param name="returnValue"></param>
            <returns></returns>
        </member>
        <member name="M:KangWeiCommon.Extensions.ToFloat(System.String,System.Single)">
            <summary>
            字符串转换为Float类型，如果转换失败，返回defaultValue
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:KangWeiCommon.Extensions.IsDouble(System.String)">
            <summary>
            判断字符串能否成功转换为Double类型。
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:KangWeiCommon.Extensions.IsDouble(System.String,System.Double@)">
            <summary>
            判断字符串能否成功转换为Double类型。
            </summary>
            <param name="str"></param>
            <param name="returnValue"></param>
            <returns></returns>
        </member>
        <member name="M:KangWeiCommon.Extensions.ToDouble(System.String,System.Double)">
            <summary>
            字符串转换为double类型。如果转换失败，返回0
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:KangWeiCommon.Extensions.IsShort(System.String)">
            <summary>
            判断字符串能否转换为Short类型(int16)。
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:KangWeiCommon.Extensions.IsShort(System.String,System.Int16@)">
            <summary>
            判断字符串能否转换为Short类型(int16)。
            </summary>
            <param name="str"></param>
            <param name="returnValue"></param>
            <returns></returns>
        </member>
        <member name="M:KangWeiCommon.Extensions.ToShort(System.String,System.Int16)">
            <summary>
            字符串转换为Short类型(Int16类型)。如果转换失败，返回指定的默认值
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:KangWeiCommon.Extensions.IsInt(System.String)">
            <summary>
            判断字符串能否转换为Int32类型。
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:KangWeiCommon.Extensions.IsInt(System.String,System.Int32@)">
            <summary>
            判断字符串能否成功转换为Int32类型。
            </summary>
            <param name="str"></param>
            <param name="returnValue"></param>
            <returns></returns>
        </member>
        <member name="M:KangWeiCommon.Extensions.ToInt(System.String,System.Int32)">
            <summary>
            字符串转换为int类型。如果转换失败，返回指定的默认值
            </summary>
            <param name="str"></param>
            <param name="defaultValue">转换失败时返回的默认值</param>
            <returns></returns>
        </member>
        <member name="M:KangWeiCommon.Extensions.ToIntOrNull(System.String)">
            <summary>
            字符串转换为int类型。如果转换失败，返回null
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:KangWeiCommon.Extensions.IsLong(System.String)">
            <summary>
            判断字符串能否转换为Int64类型。
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:KangWeiCommon.Extensions.IsLong(System.String,System.Int64@)">
            <summary>
            判断字符串能否成功转换为Int64类型。如果转换失败，返回指定的默认值
            </summary>
            <param name="str"></param>
            <param name="returnValue"></param>
            <returns></returns>
        </member>
        <member name="M:KangWeiCommon.Extensions.ToLong(System.String,System.Int64)">
            <summary>
            字符串转换为Long类型(int64)
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:KangWeiCommon.Extensions.ToDateTime(System.String,System.String)">
            <summary>
            字符串转换为DateTime类型。
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:KangWeiCommon.Extensions.ToDateTimeOrNull(System.String)">
            <summary>
            字符串转换为DateTime类型，如果转换失败，返回null 
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:KangWeiCommon.Extensions.ToBoolean(System.String)">
            <summary>
            字符串转换为bool类型。如果转换失败，返回false
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:KangWeiCommon.Extensions.IsGuid(System.String)">
            <summary>
            判断字符串能够转换为Guid类型。
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:KangWeiCommon.Extensions.IsGuid(System.String,System.Guid@)">
             <summary>
            判断字符串能够转为Guid类型。
             </summary>
             <param name="str"></param>
             <param name="returnValue"></param>
             <returns></returns>
        </member>
        <member name="M:KangWeiCommon.Extensions.ToGuid(System.String)">
            <summary>
            字符串转换为Guid类型，如果转换失败，返回Guid.Empty
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:KangWeiCommon.Extensions.ToEnum``1(System.String)">
            <summary>
            字符串转换为枚举类型
            </summary>
            <typeparam name="T"></typeparam>
            <param name="this"></param>
            <returns></returns>
        </member>
        <member name="M:KangWeiCommon.Extensions.Left(System.String,System.Int32)">
            <summary>
            从左边开始截取长度的字符串
            length小于1时或字符串传null的时候，抛出异常。
            </summary>
            <param name="str"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:KangWeiCommon.Extensions.Right(System.String,System.Int32)">
            <summary>
            从右边开始截取长度的字符串
            length小于1时或字符串传null的时候，抛出异常。
            length大于被截取的字符串长度时，返回源字符串
            </summary>
            <param name="str"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:KangWeiCommon.Extensions.RemoveSpaceLine(System.String)">
            <summary>
            移除字符串中的空格和换行(\r、\n)
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:KangWeiCommon.Extensions.DeserializeXml``1(System.String)">
            <summary>
            将xml字符串反序列化为对象
            </summary>
            <typeparam name="T"></typeparam>
            <param name="this">xml字符串</param>
            <returns></returns>
        </member>
        <member name="M:KangWeiCommon.Extensions.DeserializeJson``1(System.String,System.Text.Encoding)">
            <summary>
            将json字符串反序列化为对象
            </summary>
            <typeparam name="T"></typeparam>
            <param name="this"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="T:KangWeiCommon.Ensure">
            <summary>
            确保输入值必须满足某个条件。如果不满足条件，就抛出异常。
            </summary>
        </member>
        <member name="M:KangWeiCommon.Ensure.NotNullOrEmpty(System.String,System.String)">
            <summary>
            确保输入值不为空字符串。如果为空字符串(null、""、"  "、string.empty)，就抛异常。
            </summary>
            <param name="paramName">参数名</param>
            <param name="input">输入值</param>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:KangWeiCommon.Ensure.NotNull(System.String,System.Object)">
            <summary>
            确保输入值不能为null。如果为null,就抛异常。
            </summary>
            <param name="paramName">参数名</param> 
            <param name="input">输入值</param>
        </member>
        <member name="M:KangWeiCommon.Ensure.Null(System.String,System.Object)">
            <summary>
            确保输入值必须为null。如果不为null,就抛异常。
            </summary>
            <param name="paramName">参数名</param> 
            <param name="input">输入值</param>
        </member>
        <member name="M:KangWeiCommon.Ensure.HasLength(System.String,System.Collections.IEnumerable)">
            <summary>
            确保集合中必须有元素。如果没有元素，就抛异常
            </summary>
            <param name="paramName">集合名</param>
            <param name="value">集合</param>
        </member>
        <member name="M:KangWeiCommon.Ensure.Gt``1(System.String,``0,``0)">
            <summary>
            确保输入值大于参考值。如果输入值小于等于参考值，就抛出异常。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="paramName">参数名</param>
            <param name="input">输入值</param>
            <param name="value">参考值</param>
        </member>
        <member name="M:KangWeiCommon.Ensure.GtOrEq``1(System.String,``0,``0)">
            <summary>
            确保输入值大于等于参考值。如果输入值小于参考值，就抛出异常。
            </summary>
            <param name="paramName">参数名</param>
            <param name="input">输入值</param>
            <param name="value">参考值</param>
        </member>
        <member name="M:KangWeiCommon.Ensure.Lt``1(System.String,``0,``0)">
            <summary>
            确保输入值小于参考值。如果输入值大于等于参考值，就抛出异常。
            </summary>
            <param name="paramName">参数名</param>
            <param name="input">输入值</param>
            <param name="value">参考值</param>
        </member>
        <member name="M:KangWeiCommon.Ensure.LtOrEq``1(System.String,``0,``0)">
            <summary>
            确保输入值小于等于参考值。如果输入值大于参考值，就抛出异常。
            </summary>
            <param name="paramName">参考值</param>
            <param name="input">输入值</param>
            <param name="value">参考值</param>
        </member>
        <member name="M:KangWeiCommon.Ensure.Eq``1(System.String,``0,``0)">
            <summary>
            确保输入值等于参考值。如果输入值不等于参考值，就抛出异常。
            </summary>
            <param name="paramName">参数名</param>
            <param name="input">输入值</param>
            <param name="value">参考值</param>
        </member>
        <member name="M:KangWeiCommon.Ensure.NotEq``1(System.String,``0,``0)">
            <summary>
            确保输入值不等于参考值。如果输入值等于参考值，就抛出异常。
            </summary>
            <param name="paramName">参数名</param>
            <param name="input">输入值</param>
            <param name="value">参考值</param>
        </member>
        <member name="M:KangWeiCommon.Ensure.In(System.String,System.Object,System.Collections.IEnumerable)">
            <summary>
            确保输入值在指定的范围内。如果不在指定范围，就抛出异常。
            </summary>
            <param name="paramName">参数名</param>
            <param name="input">输入值</param>
            <param name="value">范围集合</param>
        </member>
        <member name="M:KangWeiCommon.Ensure.NotIn(System.String,System.Object,System.Collections.IEnumerable)">
            <summary>
            确保输入值不在指定的范围。如果在指定范围之内，就抛出异常。
            </summary>
            <param name="paramName">参数名</param>
            <param name="input">输入值</param>
            <param name="value">范围值</param>
        </member>
        <member name="M:KangWeiCommon.Ensure.In``1(System.String,``0,``0[])">
            <summary>
            确保输入值在指定的范围内。如果不在指定范围，就抛出异常。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="paramName">参数名</param>
            <param name="input">输入值</param>
            <param name="value">范围值</param>
        </member>
        <member name="M:KangWeiCommon.Ensure.NotIn``1(System.String,``0,``0[])">
            <summary>
            确保输入值不在指定的范围内。如果不在指定范围，就抛出异常。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="paramName">参数名</param>
            <param name="input">输入值</param>
            <param name="value">范围值</param>
        </member>
        <member name="M:KangWeiCommon.Ensure.EnumIn``1(System.String,System.Int32)">
            <summary>
            确保输入的int值必须在指定的枚举范围之内，如果不在指定的枚举范围之内，就抛出异常
            </summary>
            <typeparam name="T"></typeparam>
            <param name="paramName">参数名</param>
            <param name="input">输入值</param>
        </member>
        <member name="T:KangWeiCommon.IdWorker">
            <summary>
            雪花算法 自增Id生成器
            </summary>
        </member>
        <member name="F:KangWeiCommon.IdWorker.Twepoch">
            <summary>
            基准时间
            </summary>
        </member>
        <member name="F:KangWeiCommon.IdWorker.WorkerIdBits">
            <summary>
            机器标识位数 机器id 低5位
            </summary>
        </member>
        <member name="F:KangWeiCommon.IdWorker.DatacenterIdBits">
            <summary>
            数据标志位数 数据中心id 高5位
            </summary>
        </member>
        <member name="F:KangWeiCommon.IdWorker.SequenceBits">
            <summary>
            序列号识位数
            </summary>
        </member>
        <member name="F:KangWeiCommon.IdWorker.MaxWorkerId">
            <summary>
            机器ID最大值
            </summary>
        </member>
        <member name="F:KangWeiCommon.IdWorker.MaxDatacenterId">
            <summary>
            数据标志ID最大值
            </summary>
        </member>
        <member name="F:KangWeiCommon.IdWorker.SequenceMask">
            <summary>
            序列号ID最大值
            </summary>
        </member>
        <member name="F:KangWeiCommon.IdWorker.WorkerIdShift">
            <summary>
            机器ID偏左移12位
            </summary>
        </member>
        <member name="F:KangWeiCommon.IdWorker.DatacenterIdShift">
            <summary>
            数据ID偏左移17位
            </summary>
        </member>
        <member name="F:KangWeiCommon.IdWorker.TimestampLeftShift">
            <summary>
            时间毫秒左移22位
            </summary>
        </member>
        <member name="F:KangWeiCommon.IdWorker._sequence">
            <summary>
            序列号
            </summary>
        </member>
        <member name="F:KangWeiCommon.IdWorker._lastTimestamp">
            <summary>
            上一次生成Id的时间戳
            </summary>
        </member>
        <member name="P:KangWeiCommon.IdWorker.WorkerId">
            <summary>
            
            </summary>
        </member>
        <member name="P:KangWeiCommon.IdWorker.DatacenterId">
            <summary>
            
            </summary>
        </member>
        <member name="P:KangWeiCommon.IdWorker.Sequence">
            <summary>
            
            </summary>
        </member>
        <member name="M:KangWeiCommon.IdWorker.#ctor(System.Int64,System.Int64,System.Int64)">
            <summary>
            
            </summary>
            <param name="workerId">机器id</param>
            <param name="datacenterId">数据中心id</param>
            <param name="sequence"></param>
        </member>
        <member name="F:KangWeiCommon.IdWorker._lock">
            <summary>
            全局锁
            </summary>
        </member>
        <member name="M:KangWeiCommon.IdWorker.NextId">
            <summary>
            生成全局唯一Id
            </summary>
            <returns></returns>
        </member>
        <member name="M:KangWeiCommon.IdWorker.TilNextMillis(System.Int64)">
            <summary>
            防止产生的时间比之前的时间还要小（由于NTP回拨等问题）,保持增量的趋势.
            </summary>
            <param name="lastTimestamp"></param>
            <returns></returns>
        </member>
        <member name="M:KangWeiCommon.IdWorker.TimeGen">
            <summary>
            获取当前的时间戳
            </summary>
            <returns></returns>
        </member>
        <member name="F:KangWeiCommon.IdWorker.Jan1st1970">
            <summary>
            1970.1.1 utc时间
            </summary>
        </member>
        <member name="T:KangWeiCommon.KangWeiUtil">
            <summary>
            通用辅助类
            </summary>
        </member>
        <member name="M:KangWeiCommon.KangWeiUtil.IpToUInt(System.String)">
            <summary>
            ip地址转换为UInt类型
            </summary>
            <param name="ip">ip地址</param>
            <returns></returns>
            <example>192.168.20.46</example>
        </member>
        <member name="M:KangWeiCommon.KangWeiUtil.UIntToIp(System.UInt32)">
            <summary>
            int转换为ip地址
            </summary>
            <param name="number"></param>
            <returns></returns>
        </member>
    </members>
</doc>
